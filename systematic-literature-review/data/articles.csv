"Key","Item Type","Publication Year","Author","Title","Publication Title","ISBN","ISSN","DOI","Url","Abstract Note","Date","Date Added","Date Modified","Access Date","Pages","Num Pages","Issue","Volume","Number Of Volumes","Journal Abbreviation","Short Title","Series","Series Number","Series Text","Series Title","Publisher","Place","Language","Rights","Type","Archive","Archive Location","Library Catalog","Call Number","Extra","Notes","File Attachments","Link Attachments","Manual Tags","Automatic Tags","Editor","Series Editor","Translator","Contributor","Attorney Agent","Book Author","Cast Member","Commenter","Composer","Cosponsor","Counsel","Interviewer","Producer","Recipient","Reviewed Author","Scriptwriter","Words By","Guest","Number","Edition","Running Time","Scale","Medium","Artwork Size","Filing Date","Application Number","Assignee","Issuing Authority","Country","Meeting Name","Conference Name","Court","References","Reporter","Legal Status","Priority Numbers","Programming Language","Version","System","Code","Code Number","Section","Session","Committee","History","Legislative Body"
"S3GZS4C3","journalArticle","2024","Molla, Md Monirul Islam; Ahmad, Johanna; Wan Kadir, Wan Mohd Nasir","A Comparison of Transforming the User Stories and Functional Requirements into UML Use Case Diagram","International Journal of Innovative Computing","","2180-4370","10.11113/ijic.v14n1.463","https://ijic.utm.my/index.php/ijic/article/view/463","Software development life cycle is a continuous process for every developer community, including establishing the user requirements and system design until software maintenance. The system design phase contains the transformation of all-natural language requirements into models. The Unified Modelling Language (UML) use case model is regarded as one of the most helpful diagrams for a software developer to understand the higher version of the software blueprint. It’s very useful to reflects the business requirements for any proposed software system. Manual analysis requires significant time and effort, highlighting the need for automated assistance. This study aims to enhance the machine learning techniques that have been utilized to transform user stories and functional requirements into a UML use case diagram. This research also investigate the use of an automated Natural Language Processing (NLP) tool and framework for mapping use case diagram elements from user stories and functional requirements written in natural languages. The proposed approach using a NLP based machine learning framework called BERT to predict and extract actors, use cases, and the relationship between actors and use cases. This approach has been applicable for both user stories and functional requirements. A dataset has been pre-processed in order to train this model and collected from various sources like Kaggle, software projects. There are 11 user stories and 11 functional requirements were selected to test the proposed solution. The data set from benchmark repositories. The extracted results during the whole NLP process are then mapped into actors, use cases, and relationships. This study was evaluated using both accuracy and precision values for performance measures. By applying NLP technologies, this research offers complete support for extracting elements and generating a use case diagram and revealed the 88% accuracy and 88% precision.","2024-05-31","2024-10-15 16:42:53","2024-10-15 16:42:53","2024-10-15 16:42:53","29-36","","1","14","","Int J Innov Comp","","","","","","","","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/HEHJD7BA/Molla et al. - 2024 - A Comparison of Transforming the User Stories and .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"G4EBK5V9","conferencePaper","2017","Ferrari, Alessio; Spagnolo, Giorgio Oronzo; Gnesi, Stefania","PURE: A Dataset of Public Requirements Documents","2017 IEEE 25th International Requirements Engineering Conference (RE)","978-1-5386-3191-1","","10.1109/RE.2017.29","http://ieeexplore.ieee.org/document/8049173/","This paper presents PURE (PUblic REquirements dataset), a dataset of 79 publicly available natural language requirements documents collected from the Web. The dataset includes 34,268 sentences and can be used for natural language processing tasks that are typical in requirements engineering, such as model synthesis, abstraction identiﬁcation and document structure assessment. It can be further annotated to work as a benchmark for other tasks, such as ambiguity detection, requirements categorisation and identiﬁcation of equivalent requirements. In the paper, we present the dataset and we compare its language with generic English texts, showing the peculiarities of the requirements jargon, made of a restricted vocabulary of domain-speciﬁc acronyms and words, and long sentences. We also present the common XML format to which we have manually ported a subset of the documents, with the goal of facilitating replication of NLP experiments.","2017-09","2024-10-15 16:43:21","2024-10-15 16:43:21","2024-10-15 16:43:21","502-505","","","","","","PURE","","","","","IEEE","Lisbon, Portugal","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/N576C8ZK/Ferrari et al. - 2017 - PURE A Dataset of Public Requirements Documents.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 IEEE 25th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"ANMLTNQR","conferencePaper","2018","Alhoshan, Waad; Batista-Navarro, Riza; Zhao, Liping","Towards a Corpus of Requirements Documents Enriched with Semantic Frame Annotations","2018 IEEE 26th International Requirements Engineering Conference (RE)","978-1-5386-7418-5","","10.1109/RE.2018.00055","https://ieeexplore.ieee.org/document/8491162/","Software requirements are typically written in natural language, which need to be transformed into a more formal representation. Natural language processing techniques have been applied to aid in this transformation. Semantic parsing, for instance, adds semantic structure to text. It however requires supporting corpora which are still missing in requirements engineering. To address this gap, we developed FN-RE, a corpus of requirements documents, which was annotated based on semantic frames in FrameNet. Each requirement statement was manually labelled by two annotators by selecting suitable semantic frames and related frame elements. We obtained an average agreement of 72.85% between the two annotators, measured by F-score, thus indicating that the annotations provided in our corpus are reliable.","2018-08","2024-10-15 16:43:30","2024-10-15 16:43:31","2024-10-15 16:43:30","428-431","","","","","","","","","","","IEEE","Banff, AB","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/DEMIMPKV/Alhoshan et al. - 2018 - Towards a Corpus of Requirements Documents Enriche.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2018 IEEE 26th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"SHIME8YF","conferencePaper","2021","A. Abdelnabi, Esra; M. Maatuk, Abdelsalam; M. Abdelaziz, Tawfig","An Algorithmic Approach for Generating Behavioral UML Models Using Natural Language Processing","The 7th International Conference on Engineering & MIS 2021","978-1-4503-9044-6","","10.1145/3492547.3492612","https://dl.acm.org/doi/10.1145/3492547.3492612","The process of transformation from informal requirements stated in natural language into a formal specification such as Unified Modeling Language (UML) is an important challenge. User requirements that are expressed in natural language can be very problematic, which makes the requirements analysis a difficult task. In this paper, we propose a method to analyze the natural language requirements and generate sequence and collaboration diagrams from these requirements, which are commonly used to describe the behavior of software systems. A case study was accomplished to compare the diagrams generated by the proposed approach to the diagrams produced by other approaches. The results showed that the elements of the sequence and collaboration diagrams extracted through our approach are very satisfactory and they would be acceptable as initial analysis models.","2021-10-11","2024-10-15 16:43:42","2024-10-15 16:43:42","2024-10-15 16:43:42","1-6","","","","","","","","","","","ACM","Almaty Kazakhstan","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/6N5QX9LZ/A. Abdelnabi et al. - 2021 - An Algorithmic Approach for Generating Behavioral .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ICEMIS'21: The 7th International Conference on Engineering & MIS 2021","","","","","","","","","","","","","","",""
"HGGUUD56","conferencePaper","2009","Deeptimahanti, Deva Kumar; Babar, Muhammad Ali","An Automated Tool for Generating UML Models from Natural Language Requirements","2009 IEEE/ACM International Conference on Automated Software Engineering","978-1-4244-5259-0","","10.1109/ASE.2009.48","http://ieeexplore.ieee.org/document/5431706/","This paper describes a domain independent tool, named, UML Model Generator from Analysis of Requirements (UMGAR), which generates UML models like the Use-case Diagram, Analysis class model, Collaboration diagram and Design class model from natural language requirements using efficient Natural Language Processing (NLP) tools. UMGAR implements a set of syntactic reconstruction rules to process complex requirements into simple requirements. UMGAR also provides a generic XMI parser to generate XMI files for visualizing the generated models in any UML modeling tool. With respect to the existing tools in this area, UMGAR provides more comprehensive support for generating models with proper relationships, which can be used for large requirement documents.","2009-11","2024-10-15 16:43:50","2024-10-15 16:43:50","2024-10-15 16:43:50","680-682","","","","","","","","","","","IEEE","Auckland, New Zealand","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/65EHKTBT/Deeptimahanti and Babar - 2009 - An Automated Tool for Generating UML Models from N.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 24th IEEE/ACM International Conference on Automated Software Engineering (ASE)","","","","","","","","","","","","","","",""
"3ZNED3EC","conferencePaper","2018","Wangoo, Divanshi Priyadarshni","Artificial Intelligence Techniques in Software Engineering for Automated Software Reuse and Design","2018 4th International Conference on Computing Communication and Automation (ICCCA)","978-1-5386-6947-1","","10.1109/CCAA.2018.8777584","https://ieeexplore.ieee.org/document/8777584/","Mining of software engineering data have proved successful for reusability of components in software development. Artificial Intelligence improves a large application domain of software engineering activities. Intelligent knowledge discovery integrates Artificial Intelligence with Data Mining for intelligent computing of software engineering tasks. The integration of artificial intelligence with data mining for supporting software engineering applications leads to Software Intelligence. This paper analyzes three artificial intelligence techniques that uses data mining, business intelligence, machine learning for promoting automated software reuse for software construction and overall software development. The business intelligence tools are used for intelligent knowledge discovery of code that will be used for reusability of applications and components. An analysis of several AI techniques in software reuse domain of software engineering is discussed for automated software reuse and identification of potential research prospects in the field.","2018-12","2024-10-15 16:44:56","2024-10-15 16:44:56","2024-10-15 16:44:56","1-4","","","","","","","","","","","IEEE","Greater Noida, India","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/VLP2WHQM/Wangoo - 2018 - Artificial Intelligence Techniques in Software Eng.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2018 4th International Conference on Computing Communication and Automation (ICCCA)","","","","","","","","","","","","","","",""
"S5N2HUUU","journalArticle","2024","Necula, Sabina-Cristiana; Dumitriu, Florin; Greavu-Șerban, Valerică","A Systematic Literature Review on Using Natural Language Processing in Software Requirements Engineering","Electronics","","2079-9292","10.3390/electronics13112055","https://www.mdpi.com/2079-9292/13/11/2055","This systematic literature review examines the integration of natural language processing (NLP) in software requirements engineering (SRE) from 1991 to 2023. Focusing on the enhancement of software requirement processes through technological innovation, this study spans an extensive array of scholarly articles, conference papers, and key journal and conference reports, including data from Scopus, IEEE Xplore, ACM Digital Library, and Clarivate. Our methodology employs both quantitative bibliometric tools, like keyword trend analysis and thematic mapping, and qualitative content analysis to provide a robust synthesis of current trends and future directions. Reported findings underscore the essential roles of advanced computational techniques like machine learning, deep learning, and large language models in refining and automating SRE tasks. This review highlights the progressive adoption of these technologies in response to the increasing complexity of software systems, emphasizing their significant potential to enhance the accuracy and efficiency of requirement engineering practices while also pointing to the challenges of integrating artificial intelligence (AI) and NLP into existing SRE workflows. The systematic exploration of both historical contributions and emerging trends offers new insights into the dynamic interplay between technological advances and their practical applications in SRE.","2024-05-24","2024-10-15 16:45:02","2024-10-15 16:45:02","2024-10-15 16:45:02","2055","","11","13","","Electronics","","","","","","","","en","https://creativecommons.org/licenses/by/4.0/","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/F5JMEQNR/Necula et al. - 2024 - A Systematic Literature Review on Using Natural La.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YXTTI2ZQ","conferencePaper","2024","Jahan, Munima; Hassan, Mohammad Mahdi; Golpayegani, Reza; Ranjbaran, Golshid; Roy, Chanchal; Roy, Banani; Schneider, Kevin","Automated Derivation of UML Sequence Diagrams from User Stories: Unleashing the Power of Generative AI vs. a Rule-Based Approach","Proceedings of the ACM/IEEE 27th International Conference on Model Driven Engineering Languages and Systems","9798400705045","","10.1145/3640310.3674081","https://dl.acm.org/doi/10.1145/3640310.3674081","User stories are informal, non-technical descriptions of features from a user’s perspective that guide collaboration and iterative development in Agile projects. However, ambiguities in user stories can lead to miscommunication among stakeholders. Design models, such as UML sequence diagrams, are essential for enhancing communication, clarifying system behavior, and improving the development process. This paper presents an automated approach for generating behavioral models specifically sequence diagrams from natural language requirements expressed as user stories. We also investigate the effectiveness of a Large Language Model (LLM) in using generative AI for this task. By applying our approach and ChatGPT to two benchmark datasets with the same set of user stories, we generated corresponding sequence diagrams for comparison. Expert evaluations in Software Engineering reveal that our approach effectively produces relevant, simplified diagrams for straightforward user stories, whereas the LLM tends to create more complex diagrams that sometimes go beyond the simplicity of the original user stories.","2024-09-22","2024-10-15 16:45:17","2024-10-15 16:45:17","2024-10-15 16:45:17","138-148","","","","","","Automated Derivation of UML Sequence Diagrams from User Stories","","","","","ACM","Linz Austria","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/2XQ5YS8H/Jahan et al. - 2024 - Automated Derivation of UML Sequence Diagrams from.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","MODELS '24: ACM/IEEE 27th International Conference on Model Driven Engineering Languages and Systems","","","","","","","","","","","","","","",""
"B6IINTQR","conferencePaper","2022","Ahmed, Sharif; Ahmed, Arif; Eisty, Nasir U.","Automatic Transformation of Natural to Unified Modeling Language: A Systematic Review","2022 IEEE/ACIS 20th International Conference on Software Engineering Research, Management and Applications (SERA)","","","10.1109/SERA54885.2022.9806783","http://arxiv.org/abs/2204.00932","Context: Processing Software Requirement Speciﬁcations (SRS) manually takes a much longer time for requirement analysts in software engineering. Researchers have been working on making an automatic approach to ease this task. Most of the existing approaches require some intervention from an analyst or are challenging to use. Some automatic and semi-automatic approaches were developed based on heuristic rules or machine learning algorithms. However, there are various constraints to the existing approaches to UML generation, such as restrictions on ambiguity, length or structure, anaphora, incompleteness, atomicity of input text, requirements of domain ontology, etc. . Objective: This study aims to better understand the effectiveness of existing systems and provide a conceptual framework with further improvement guidelines. Method: We performed a systematic literature review (SLR). We conducted our study selection into two phases and selected 70 papers. We conducted quantitative and qualitative analyses by manually extracting information, cross-checking, and validating our ﬁndings. Result: We described the existing approaches and revealed the issues observed in these works. We identiﬁed and clustered both the limitations and beneﬁts of selected articles. Conclusion: This research upholds the necessity of a common dataset and evaluation framework to extend the research consistently. It also describes the signiﬁcance of natural language processing obstacles researchers face. In addition, it creates a path forward for future research.","2022-05-25","2024-10-15 16:45:54","2024-10-15 16:45:54","2024-10-15 16:45:54","112-119","","","","","","Automatic Transformation of Natural to Unified Modeling Language","","","","","","","en","","","","","arXiv.org","","arXiv:2204.00932 [cs]","","/home/user/snap/zotero-snap/common/Zotero/storage/RDM9ZGTB/Ahmed et al. - 2022 - Automatic Transformation of Natural to Unified Mod.pdf","","","Computer Science - Software Engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U27JFDFV","conferencePaper","2017","Jaiwai, Mathawan; Sammapun, Usa","Extracting UML class diagrams from software requirements in Thai using NLP","2017 14th International Joint Conference on Computer Science and Software Engineering (JCSSE)","978-1-5090-4834-2","","10.1109/JCSSE.2017.8025938","http://ieeexplore.ieee.org/document/8025938/","In software development, requirements, normally written in natural language, are documents that specify what users want in software products. Software developers then analyze these requirements to create domain models represented in UML diagrams in an attempt to comprehend what users need in the software products. These domain models are usually converted into design models and finally carried over into classes in source code. Thus, domain models have an impact on the final software products. However, creating correct domain models can be difficult when software developers are not skilled. Moreover, even for skilled developers, when requirements are large, wading through all requirements to create domain models can take times and might result in errors. Therefore, researchers have studied various approaches to apply natural language processing techniques to transform requirements written in natural language into UML diagrams. Those researches focus on requirements written in English. This paper proposes an approach to process requirements written in Thai to extract UML class diagrams using natural language processing techniques. The UML class diagram extraction is based on transformation rules that identify classes and attributes from requirements. The results are evaluated with recall and precision using truth values created by humans. Future works include identifying operations and relationships from requirements to complete class diagram extraction. Our research should benefit Thai software developers by reducing time in requirement analysis and also helping novice software developers to create correct domain models represented in UML class diagram.","2017-07","2024-10-15 16:46:03","2024-10-15 16:46:03","2024-10-15 16:46:03","1-5","","","","","","","","","","","IEEE","NakhonSiThammarat, Thailand","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/4DDG2QPK/Jaiwai and Sammapun - 2017 - Extracting UML class diagrams from software requir.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 14th International Joint Conference on Computer Science and Software Engineering (JCSSE)","","","","","","","","","","","","","","",""
"P9YWSPEG","journalArticle","2017","Dawood, Omer Salih; Sahraoui, Abd-El-Kader","From Requirements Engineering to UML using Natural Language Processing – Survey Study","European Journal of Engineering Research and Science","","2506-8016","10.24018/ejers.2017.2.1.236","http://ejers.org/index.php/ejers/article/view/236","In the paper process of moving from software requirements to Unified Modeling Language (UML) diagrams has been studied. It shows the importance of this process and discusses many comparative studies in the field. A questionnaire related to the study was distributed worldwide to many research groups, academia, and industry to know the current status of using requirement management tools, knowledge of using UML in software development, frequently used UML diagrams, and the methodology used to generate UML diagrams from requirements. The paper emphasises that there is a need to do some important research in the area of requirements Natural Language processing (NLP) to obtain UML diagrams, and generalize process of using automatic or semi-automatic methodology to generate UML diagrams from requirements.","2017-01-23","2024-10-15 16:46:08","2024-10-15 16:46:08","2024-10-15 16:46:08","44","","1","2","","EJERS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/4WCE299X/Dawood and Sahraoui - 2017 - From Requirements Engineering to UML using Natural.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SQ34MNUM","conferencePaper","2021","Abdelnabi, Esra A.; Maatuk, Abdelsalam M.; Hagal, Mohammed","Generating UML Class Diagram from Natural Language Requirements: A Survey of Approaches and Techniques","2021 IEEE 1st International Maghreb Meeting of the Conference on Sciences and Techniques of Automatic Control and Computer Engineering MI-STA","978-1-66541-856-0","","10.1109/MI-STA52233.2021.9464433","https://ieeexplore.ieee.org/document/9464433/","In the last years, many methods and tools for generating Unified Modeling Language (UML) class diagrams from natural language (NL) software requirements. These methods and tools deal with the transformation of NL textual requirements to UML diagrams. The transformation process involves analyzing NL requirements and extracting relevant information from the text to generate UML class models. This paper aims to survey the existing works of transforming textual requirements into UML class models to indicate their strengths and limitations. The paper provides a comprehensive explanation and evaluation of the existing approaches and tools. The automation degree, efficiency, and completeness, as well as the used techniques, are studied and analyzed. The study demonstrated the necessity of automating the process, in addition to combining artificial intelligence with engineering requirements and using Natural Language Processing (NLP) techniques to extract class diagrams from NL requirements.","2021-05-25","2024-10-15 16:46:18","2024-10-15 16:46:18","2024-10-15 16:46:18","288-293","","","","","","Generating UML Class Diagram from Natural Language Requirements","","","","","IEEE","Tripoli, Libya","en","https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/3TCPQ2MV/Abdelnabi et al. - 2021 - Generating UML Class Diagram from Natural Language.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2021 IEEE 1st International Maghreb Meeting of the Conference on Sciences and Techniques of Automatic Control and Computer Engineering MI-STA","","","","","","","","","","","","","","",""
"64U5GT2E","conferencePaper","2020","Abdelnabi, Esra A.; Maatuk, Abdelsalam M.; Abdelaziz, Tawfig M.; Elakeili, Salwa M.","Generating UML Class Diagram using NLP Techniques and Heuristic Rules","2020 20th International Conference on Sciences and Techniques of Automatic Control and Computer Engineering (STA)","978-1-72818-815-7","","10.1109/STA50679.2020.9329301","https://ieeexplore.ieee.org/document/9329301/","Several tools and approaches have been proposed to generate Unified Modeling Language (UML) diagrams. Researchers focus on automating the process of extracting valuable information from Natural Language (NL) text to generate UML models. The existing approaches show less accurateness because of the ambiguity of NL. In this paper, we present a method for generation class models from software specification requirements using NL practices and a set of heuristic rules to facilitate the transformation process. The NL requirements are converted into a formal and controlled representation to increase the accuracy of the generated class diagram. A set of pre-defined rules has been developed to extract OO concepts such as classes, attributes, methods, and relationships to generate a UML class diagram from the given requirements specifications. The approach has been applied and evaluated practically, where the results show that the approach is both feasible and acceptable.","2020-12-20","2024-10-15 16:46:41","2024-10-15 16:46:41","2024-10-15 16:46:41","277-282","","","","","","","","","","","IEEE","Monastir, Tunisia","en","https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/7TX4G8YQ/Abdelnabi et al. - 2020 - Generating UML Class Diagram using NLP Techniques .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2020 20th International Conference on Sciences and Techniques of Automatic Control and Computer Engineering (STA)","","","","","","","","","","","","","","",""
"4CRVQXRQ","conferencePaper","2021","M. Maatuk, Abdelsalam; A. Abdelnabi, Esra","Generating UML Use Case and Activity Diagrams Using NLP Techniques and Heuristics Rules","International Conference on Data Science, E-learning and Information Systems 2021","978-1-4503-8838-2","","10.1145/3460620.3460768","https://dl.acm.org/doi/10.1145/3460620.3460768","The process of generating Unified Modeling Language (UML) Diagrams from Natural Language (NL) requirements is considered a complex and challenging task. Software requirements specification is often written in NL format, which causes potential problems. Requirement’s analysts analyze and process natural language requirements manually to extract the UML elements. The manual analysis takes a lot of time and effort, which justifies the need for automated support. This paper proposes an approach to facilitate the NL requirements analysis process and UML diagrams extraction from NL textual requirements using natural language processing (NLP) techniques and heuristics rules. This approach focuses on generating use-case and activity diagrams. The approach has been applied to a case study and evaluated through an experimental. The evaluation of the approach will be conducted through a comparative study. The experimental results prove that the proposed approach is considerably improved as compared to the other approaches.","2021-04-05","2024-10-15 16:46:52","2024-10-15 16:46:52","2024-10-15 16:46:52","271-277","","","","","","","","","","","ACM","Ma'an Jordan","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/HMKS252C/M. Maatuk and A. Abdelnabi - 2021 - Generating UML Use Case and Activity Diagrams Usin.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DATA'21: International Conference on Data Science, E-learning and Information Systems 2021","","","","","","","","","","","","","","",""
"BC5EYID9","journalArticle","2024","Herwanto, Guntur Budi; Quirchmayr, Gerald; Tjoa, A. Min","Leveraging NLP Techniques for Privacy Requirements Engineering in User Stories","IEEE Access","","2169-3536","10.1109/ACCESS.2024.3364533","https://ieeexplore.ieee.org/document/10430095/","Privacy requirements engineering acts as a role to systematically elicit privacy requirements from system requirements and legal requirements such as the GDPR. Many methodologies have been proposed, but the majority of them are focused on the waterfall approach, making adopting privacy engineering in agile software development difficult. The other major issue is that the process currently is to a high degree manual. This paper focuses on closing these gaps through the development of a machine learning-based approach for identifying privacy requirements in an agile software development environment, employing natural language processing (NLP) techniques. Our method aims to allow agile teams to focus on functional requirements while NLP tools assist them in generating privacy requirements. The main input for our method is a collection of user stories, which are typically used to identify functional requirements in agile software development. The NLP approach is then used to automate some human-intensive tasks such as identifying personal data and creating data flow diagrams from user stories. The data flow diagram forms the basis for the automatic creation of privacy requirements. Our evaluation shows that our NLP method achieves a fairly good performance in terms of F-Measure. We are also demonstrate the feasibility of our NLP approach in CamperPlus project. Lastly, we are developing a tool to integrate our NLP approach into the privacy requirements engineering pipeline, allowing for manual editing of results so that agile teams can maintain control over the automated approach.","2024","2024-10-15 16:47:10","2024-10-15 16:47:10","2024-10-15 16:47:10","22167-22189","","","12","","IEEE Access","","","","","","","","en","https://creativecommons.org/licenses/by-nc-nd/4.0/","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/26X5GLDZ/Herwanto et al. - 2024 - Leveraging NLP Techniques for Privacy Requirements.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SVLE4BPS","conferencePaper","2021","Bashir, Nauman; Bilal, Muhammad; Liaqat, Misbah; Marjani, Mohsen; Malik, Nadia; Ali, Mohsin","Modeling Class Diagram using NLP in Object-Oriented Designing","2021 National Computing Colleges Conference (NCCC)","978-1-72816-719-0","","10.1109/NCCC49330.2021.9428817","https://ieeexplore.ieee.org/document/9428817/","Requirement’s analysis and design is a multifaceted and time-consuming process. The success of software projects critically relies on careful & timely analysis and modeling of system requirements. Mostly, the requirements gathered from the stakeholders are written in some language (probably English). In this regard, significant manual efforts are required for the formation of good class model which unfortunately results in time delays in the software industry. The problems associated with the requirement analysis and class modeling can be overcome by the appropriate employment of machine learning. In this paper, we propose a system, requirement engineering analysis & design (READ) to generate unified modeling language (UML) class diagram using natural language processing (NLP) and domain ontology techniques. We have implemented the READ system in Python and it successfully generates the UML class diagram i.e., class name, attributes methods, and relationships from the textual requirements written in English. To assess the performance of the proposed system, we have evaluated it on publicly available standards and the experimental results show that it outperforms the existing techniques for object-oriented based software designing.","2021-03-27","2024-10-15 16:47:22","2024-10-15 16:47:22","2024-10-15 16:47:22","1-6","","","","","","","","","","","IEEE","Taif, Saudi Arabia","en","https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/XJ5YPBRX/Bashir et al. - 2021 - Modeling Class Diagram using NLP in Object-Oriente.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2021 National Computing Colleges Conference (NCCC)","","","","","","","","","","","","","","",""
"YAQMN48D","conferencePaper","1996","Osborne, M.; MacNish, C.K.","Processing natural language software requirement specifications","Proceedings of the Second International Conference on Requirements Engineering","978-0-8186-7252-1","","10.1109/ICRE.1996.491451","http://ieeexplore.ieee.org/document/491451/","Ambiguity in requirement speci cations causes numerous problems; for example in de ning customer/supplier contracts, ensuring the integrity of safetycritical systems, and analysing the implications of system change requests. A direct appeal to formal speci cation has not solved these problems, partly because of the restrictiveness and lack of habitability of formal languages. An alternative approach, described in this paper, is to use natural language processing (NLP) techniques to aid the development of formal descriptions from requirements expressed in contolled natural language. While many problems in NLP remain to be solved, we show that suitable extensions to existing tools provide a useful platform for detecting and resolving ambiguities. Our system is demonstrated through a case-study on a simple requirements speci cation.","1996","2024-10-15 16:47:31","2024-10-15 16:47:31","2024-10-15 16:47:31","229-236","","","","","","","","","","","IEEE Comput. Soc. Press","Colorado Springs, CO, USA","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/NJ8JXAJ4/Osborne and MacNish - 1996 - Processing natural language software requirement s.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Second International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"ZHAEWMSK","journalArticle","2019","Gupta, Som; Gupta, S K","Natural language processing in mining unstructured data from software repositories: a review","Sādhanā","","0256-2499, 0973-7677","10.1007/s12046-019-1223-9","http://link.springer.com/10.1007/s12046-019-1223-9","With the increasing popularity of open-source platforms, software data is easily available from various open-source tools like GitHub, CVS, SVN, etc. More than 80 percent of the data present in them is unstructured. Mining data from these repositories helps project managers, developers and businesses, in getting interesting insights. Most of the software artefacts present in these repositories are in the natural language form, which makes natural language processing (NLP) an important part of mining to get the useful results. The paper reviews the application of NLP techniques in the ﬁeld of Mining Software Repositories (MSR). The paper mainly focuses on sentiment analysis, summarization, traceability, norms mining and mobile analytics. The paper presents the major NLP works performed in this area by surveying the research papers from 2000 to 2018. The paper ﬁrstly describes the major artefacts present in the software repositories where the NLP techniques have been applied. Next, the paper presents some popular open-source NLP tools that have been used to perform NLP tasks. Later the paper discusses, in brief, the research state of NLP in MSR ﬁeld. The paper also lists down the various challenges along with the pointers for future work in this ﬁeld of research and ﬁnally the conclusion.","2019-12","2024-10-15 16:47:39","2024-10-15 16:47:39","2024-10-15 16:47:39","244","","12","44","","Sādhanā","Natural language processing in mining unstructured data from software repositories","","","","","","","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/H9GIKKAH/Gupta and Gupta - 2019 - Natural language processing in mining unstructured.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R5HA5SMJ","journalArticle","2018","Elallaoui, Meryem; Nafil, Khalid; Touahni, Raja","Automatic Transformation of User Stories into UML Use Case Diagrams using NLP Techniques","Procedia Computer Science","","18770509","10.1016/j.procs.2018.04.010","https://linkinghub.elsevier.com/retrieve/pii/S1877050918303600","","2018","2024-10-15 16:47:56","2024-10-15 16:47:56","2024-10-15 16:47:56","42-49","","","130","","Procedia Computer Science","","","","","","","","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/S3NU63FQ/Elallaoui et al. - 2018 - Automatic Transformation of User Stories into UML .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HM7QUPG8","journalArticle","2009","Bajwa, Imran Sarwar; Samad, Ali; Mumtaz, Shahzad","Object Oriented Software Modeling Using NLP Based Knowledge Extraction","","","","","https://abdn.elsevierpure.com/en/publications/object-oriented-software-modeling-using-nlp-based-knowledge-extra","This paper presents a natural language processing based automated system for NL text to OO modeling the user requirements and generating code in multi-languages. A new rule-based model is presented for analyzing the natural languages (NL) and extracting the relative and required information from the given software requirement notes by the user. User writes the requirements in simple English in a few paragraphs and the designed system incorporates NLP methods to analyze the given script. First the NL text is semantically analyzed to extract classes, objects and their respective, attributes, methods and associations. Then UML diagrams are generated on the bases of previously extracted information. The designed system also provides with the respective code automatically of the already generated diagrams. The designed system provides a quick and reliable way to generate UML diagrams to save the time and budget of both the user and system analyst.","2009","2024-10-15 16:48:28","2024-10-26 19:47:19","","","","","","","EuroJournals, Inc.","","","","","","","","en","","","","","Zotero","","","","/home/user/snap/zotero-snap/common/Zotero/storage/XF2MYRUZ/Bajwa et al. - Object Oriented Software Modeling Using NLP Based .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DVMXG6WC","conferencePaper","2011","Deeptimahanti, Deva Kumar; Sanyal, Ratna","Semi-automatic generation of UML models from natural language requirements","Proceedings of the 4th India Software Engineering Conference","978-1-4503-0559-4","","10.1145/1953355.1953378","https://dl.acm.org/doi/10.1145/1953355.1953378","Going from requirements analysis to design phase is considered as one of the most complex and difficult activities in software development. Errors caused during this activity can be quite expensive to fix in later phases of software development. One main reason for such potential problems is due to the specification of software requirements in Natural Language format. To overcome some of these defects we have proposed a technique, which aims to provide semi- automated assistance for developers to generate UML models from normalized natural language requirements using Natural Language Processing techniques. This technique initially focuses on generating use-case diagram and analysis class model (conceptual model) followed by collaboration model generation for each use-case. Then it generates a consolidated design class model from which code model can also be generated. It also provides requirement traceability both at design and code levels by using Key-Word-InContext and Concept Location techniques respectively to identify inconsistencies in requirements. Finally, this technique generates XML Metadata Interchange (XMI) files for visualizing generated models in any UML modeling tool having XMI import feature. This paper is an extension to our existing work by enhancing its complete usage with the help of Qualification Verification System as a case study.","2011-02-24","2024-10-15 16:49:24","2024-10-15 16:49:24","2024-10-15 16:49:24","165-174","","","","","","","","","","","ACM","Thiruvananthapuram Kerala India","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/TCTIX8W4/Deeptimahanti and Sanyal - 2011 - Semi-automatic generation of UML models from natur.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ISEC '11: Indian Software Engineering Conference","","","","","","","","","","","","","","",""
"NEDBK3H6","conferencePaper","2010","Tichy, Walter F.; Koerner, Sven J.","Text to software: developing tools to close the gaps in software engineering","Proceedings of the FSE/SDP workshop on Future of software engineering research","978-1-4503-0427-6","","10.1145/1882362.1882439","https://dl.acm.org/doi/10.1145/1882362.1882439","Software development relies heavily on manual processes for transforming requirements into software artifacts such as models, source code, or test cases. Requirements are the starting point for these transformations, and they are typically written in natural language. However, hardly any automated tools exist that translate natural language texts into software artifacts.","2010-11-07","2024-10-15 16:49:33","2024-10-15 16:49:33","2024-10-15 16:49:33","379-384","","","","","","Text to software","","","","","ACM","Santa Fe New Mexico USA","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/BP6M8M9Y/Tichy and Koerner - 2010 - Text to software developing tools to close the ga.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SIGSOFT/FSE'10: 18th ACM SIGSOFT Symposium on the Foundations of Software Engineering","","","","","","","","","","","","","","",""
"AVHEBPTL","journalArticle","2012","D.Joshi, S.; Deshpande, Dhanraj","Textual Requirement Analysis for UML Diagram Extraction by using NLP","International Journal of Computer Applications","","09758887","10.5120/7795-0906","http://research.ijcaonline.org/volume50/number8/pxc3880906.pdf","Requirement analysis is the preliminary step in software development process. The requirements stated by the clients are analyzed and an abstraction of it, is created which is termed as requirement model. The automatic generation of UML diagram from natural language requirements is highly challenging and demanding very efficient methodology. Unified Modeling Language (UML) models are helpful for understanding the problems, communicating with application experts and preparing documentation. The static design view of the system can be modeled using a UML class diagram. System requirements stated by the user are usually in natural language form. This is an imprecise and inconsistent form which is difficult to be used by the developer for design UML model. We present a new methodology for generating UML diagrams or models from natural language problem statement or requirement specification. We have named our methodology as Requirement analysis and UML diagram extraction (RAUE).","2012-07-28","2024-10-15 16:49:45","2024-10-15 16:49:45","2024-10-15 16:49:45","42-46","","8","50","","IJCA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/YCXMIXGS/D.Joshi and Deshpande - 2012 - Textual Requirement Analysis for UML Diagram Extra.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QEJIX9TF","book","2015","Seidl, Martina; Scholz, Marion; Huemer, Christian; Kappel, Gerti","UML @ Classroom: An Introduction to Object-Oriented Modeling","","978-3-319-12741-5 978-3-319-12742-2","","","https://link.springer.com/10.1007/978-3-319-12742-2","","2015","2024-10-22 15:34:13","2024-10-22 16:12:34","2024-10-22 15:34:13","","","","","","","UML @ Classroom","Undergraduate Topics in Computer Science","","","","Springer International Publishing","Cham","en","https://www.springernature.com/gp/researchers/text-and-data-mining","","","","DOI.org (Crossref)","","DOI: 10.1007/978-3-319-12742-2","","/home/user/snap/zotero-snap/common/Zotero/storage/TN389G96/Seidl et al. - 2015 - UML @ Classroom An Introduction to Object-Oriented Modeling.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JYK4AB63","preprint","2021","Lu, Shuai; Guo, Daya; Ren, Shuo; Huang, Junjie; Svyatkovskiy, Alexey; Blanco, Ambrosio; Clement, Colin; Drain, Dawn; Jiang, Daxin; Tang, Duyu; Li, Ge; Zhou, Lidong; Shou, Linjun; Zhou, Long; Tufano, Michele; Gong, Ming; Zhou, Ming; Duan, Nan; Sundaresan, Neel; Deng, Shao Kun; Fu, Shengyu; Liu, Shujie","CodeXGLUE: A Machine Learning Benchmark Dataset for Code Understanding and Generation","","","","","http://arxiv.org/abs/2102.04664","Benchmark datasets have a significant impact on accelerating research in programming language tasks. In this paper, we introduce CodeXGLUE, a benchmark dataset to foster machine learning research for program understanding and generation. CodeXGLUE includes a collection of 10 tasks across 14 datasets and a platform for model evaluation and comparison. CodeXGLUE also features three baseline systems, including the BERT-style, GPT-style, and Encoder-Decoder models, to make it easy for researchers to use the platform. The availability of such data and baselines can help the development and validation of new methods that can be applied to various program understanding and generation problems 1.","2021-03-16","2024-10-22 19:18:51","2024-10-22 19:18:51","2024-10-22 19:18:51","","","","","","","CodeXGLUE","","","","","arXiv","","en","","","","","arXiv.org","","arXiv:2102.04664 [cs]","","/home/user/snap/zotero-snap/common/Zotero/storage/9R85INBC/Lu et al. - 2021 - CodeXGLUE A Machine Learning Benchmark Dataset for Code Understanding and Generation.pdf","","","Computer Science - Computation and Language; Computer Science - Software Engineering","","","","","","","","","","","","","","","","","","","arXiv:2102.04664","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CQTAD42G","conferencePaper","2018","Alhoshan, Waad; Batista-Navarro, Riza; Zhao, Liping","Towards a Corpus of Requirements Documents Enriched with Semantic Frame Annotations","2018 IEEE 26th International Requirements Engineering Conference (RE)","978-1-5386-7418-5","","10.1109/RE.2018.00055","https://ieeexplore.ieee.org/document/8491162/","","2018-08","2024-10-25 21:50:28","2024-10-25 21:50:28","2024-10-25 21:50:28","428-431","","","","","","","","","","","IEEE","Banff, AB","","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/KKCHWEKR/Alhoshan et al. - 2018 - Towards a Corpus of Requirements Documents Enriched with Semantic Frame Annotations.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2018 IEEE 26th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"JTQXE4IJ","journalArticle","2017","Ferrari, Alessio; Dell'Orletta, Felice; Esuli, Andrea; Gervasi, Vincenzo; Gnesi, Stefania","Natural Language Requirements Processing: A 4D Vision","IEEE Software","","0740-7459, 1937-4194","10.1109/MS.2017.4121207","https://ieeexplore.ieee.org/document/8106888/","","2017-11","2024-10-25 21:52:05","2024-10-25 21:52:05","2024-10-25 21:52:05","28-35","","6","34","","IEEE Softw.","Natural Language Requirements Processing","","","","","","","","https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/I29EQUNG/Ferrari et al. - 2017 - Natural Language Requirements Processing A 4D Vision.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ES2QABHE","conferencePaper","2024","Ouaddi, Charaf; Benaddi, Lamya; Souha, Adnane; Jakimi, Abdeslam; Ouchao, Brahim","A sketch of an approach for discovering UML use-case diagrams from textual specifications of systems using a chatbot","2024 IEEE 12th International Symposium on Signal, Image, Video and Communications (ISIVC)","9798350385267","","10.1109/ISIVC61350.2024.10577821","https://ieeexplore.ieee.org/document/10577821/","","2024-05-21","2024-10-25 22:08:56","2024-10-25 22:08:56","2024-10-25 22:08:56","1-6","","","","","","","","","","","IEEE","Marrakech, Morocco","","https://doi.org/10.15223/policy-029","","","","DOI.org (Crossref)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2024 IEEE 12th International Symposium on Signal, Image, Video and Communications (ISIVC)","","","","","","","","","","","","","","",""
"EH4J4CCM","bookSection","2017","Ahmed, Mudassar Adeel; Butt, Wasi Haider; Ahsan, Imran; Anwar, Muhammad Waseem; Latif, Muhammad; Azam, Farooque","A Novel Natural Language Processing (NLP) Approach to Automatically Generate Conceptual Class Model from Initial Software Requirements","Information Science and Applications 2017","978-981-10-4153-2 978-981-10-4154-9","","","http://link.springer.com/10.1007/978-981-10-4154-9_55","","2017","2024-10-25 22:20:06","2024-10-25 22:20:06","2024-10-25 22:20:06","476-484","","","424","","","","","","","","Springer Singapore","Singapore","","","","","","DOI.org (Crossref)","","Series Title: Lecture Notes in Electrical Engineering DOI: 10.1007/978-981-10-4154-9_55","","","","","","Kim, Kuinam; Joukov, Nikolai","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YKRP5XX5","conferencePaper","2024","Babaalla, Zakaria; Bouziane, El Mahi; Jakimi, Abdeslam; Oualla, Moahmed","From text-based system specifications to UML diagrams: A bridge between words and models","2024 International Conference on Circuit, Systems and Communication (ICCSC)","9798350365306","","10.1109/ICCSC62074.2024.10616686","https://ieeexplore.ieee.org/document/10616686/","","2024-06-28","2024-10-25 22:24:34","2024-10-25 22:24:34","2024-10-25 22:24:34","1-6","","","","","","From text-based system specifications to UML diagrams","","","","","IEEE","Fes, Morocco","","https://doi.org/10.15223/policy-029","","","","DOI.org (Crossref)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2024 International Conference on Circuit, Systems and Communication (ICCSC)","","","","","","","","","","","","","","",""
"DBGLJADH","conferencePaper","2024","Babaalla, Zakaria; Jakimi, Abdeslam; Oualla, Mohamed; Saadane, Rachid; Chehri, Abdellah","Towards an Automatic Extracting UML Class Diagram from System's Textual Specification","Proceedings of the 7th International Conference on Networking, Intelligent Systems and Security","9798400709296","","10.1145/3659677.3659742","https://dl.acm.org/doi/10.1145/3659677.3659742","","2024-04-18","2024-10-25 22:25:36","2024-10-25 22:25:36","2024-10-25 22:25:36","1-5","","","","","","","","","","","ACM","Meknes AA Morocco","en","","","","","DOI.org (Crossref)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NISS 2024: The 7th International Conference On Networking, Intelligents Systems and Security","","","","","","","","","","","","","","",""
"XMU2MB7N","bookSection","2019","Maqbool, Bilal; Azam, Farooque; Anwar, Muhammad Waseem; Butt, Wasi Haider; Zeb, Jahan; Zafar, Iqra; Nazir, Aiman Khan; Umair, Zuneera","A Comprehensive Investigation of BPMN Models Generation from Textual Requirements—Techniques, Tools and Trends","Information Science and Applications 2018","9789811310553 9789811310560","","","http://link.springer.com/10.1007/978-981-13-1056-0_54","","2019","2024-10-26 15:56:04","2024-10-26 15:56:04","2024-10-26 15:56:04","543-557","","","514","","","","","","","","Springer Singapore","Singapore","en","","","","","DOI.org (Crossref)","","Series Title: Lecture Notes in Electrical Engineering DOI: 10.1007/978-981-13-1056-0_54","","","","","","Kim, Kuinam J.; Baek, Nakhoon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LRN9L4GW","journalArticle","2023","Schäfer, Bernhard; Van Der Aa, Han; Leopold, Henrik; Stuckenschmidt, Heiner","Sketch2Process: End-to-End BPMN Sketch Recognition Based on Neural Networks","IEEE Transactions on Software Engineering","","0098-5589, 1939-3520, 2326-3881","10.1109/TSE.2022.3228308","https://ieeexplore.ieee.org/document/9980425/","","2023-04-01","2024-10-26 16:01:19","2024-10-26 16:01:19","2024-10-26 16:01:19","2621-2641","","4","49","","IIEEE Trans. Software Eng.","Sketch2Process","","","","","","","","https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/FHANYXTQ/Schäfer et al. - 2023 - Sketch2Process End-to-End BPMN Sketch Recognition Based on Neural Networks.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2KWFGAQD","journalArticle","2023","Nasiri, Samia; Adadi, Amina; Lahmer, Mohammed","Automatic generation of business process models from user stories","International Journal of Electrical and Computer Engineering (IJECE)","","2722-2578, 2088-8708","10.11591/ijece.v13i1.pp809-822","https://ijece.iaescore.com/index.php/IJECE/article/view/27489","In this paper, we propose an automated approach to extract business process models from requirements, which are presented as user stories. In agile software development, the user story is a simple description of the functionality of the software. It is presented from the user's point of view and is written in natural language. Acceptance criteria are a list of specifications on how a new software feature is expected to operate. Our approach analyzes a set of acceptance criteria accompanying the user story, in order, first, to automatically generate the components of the business model, and then to produce the business model as an activity diagram which is a unified modeling language (UML) behavioral diagram. We start with the use of natural language processing (NLP) techniques to extract the elements necessary to define the rules for retrieving artifacts from the business model. These rules are then developed in Prolog language and imported into Python code. The proposed approach was evaluated on a set of use cases using different performance measures. The results indicate that our method is capable of generating correct and accurate process models.","2023-02-01","2024-10-26 16:12:59","2024-10-26 16:12:59","2024-10-26 16:12:59","809","","1","13","","IJECE","","","","","","","","","http://creativecommons.org/licenses/by-sa/4.0","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/N9JAMDAF/Nasiri et al. - 2023 - Automatic generation of business process models from user stories.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UZNSNWQ7","journalArticle","2024","Babaalla, Zakaria; Abdelmalek, Hamza; Jakimi, Abdeslam; Oualla, Mohamed","Extraction of UML class diagrams using deep learning: Comparative study and critical analysis","Procedia Computer Science","","18770509","10.1016/j.procs.2024.05.053","https://linkinghub.elsevier.com/retrieve/pii/S187705092401069X","Several approaches and tools have been proposed to facilitate the automatic generation of Unified Modeling Language (UML) class diagrams from natural language specifications, based on advances in Natural Language Processing (NLP). However, these tools suffer from difficulties due to the inherent imprecision and ambiguity commonly found in natural language expressions. In this article, we present an overview and a study of approaches and tools designed to extract UML diagrams from textual requirements using NLP and computational linguistics techniques. Furthermore, we introduce approaches employing deep learning techniques. Next, we provide a descriptive study and comparative analysis of the limitations and contributions of these automatic and semiautomatic tools, as well as solutions for improving the existing state of the art.","2024","2024-10-26 18:29:46","2024-10-26 18:33:12","2024-10-26 18:29:46","452-459","","","236","","Procedia Computer Science","Extraction of UML class diagrams using deep learning","","","","","","","en","","","","","DOI.org (Crossref)","","","","/home/user/snap/zotero-snap/common/Zotero/storage/PIEF27U2/Babaalla et al. - 2024 - Extraction of UML class diagrams using deep learning Comparative study and critical analysis.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""